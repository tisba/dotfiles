# https://git-scm.com/docs/git-config.html

[user]
email = tisba@users.noreply.github.com
name = Sebastian Cohnen
useconfigonly = true
[core]
excludesfile = ~/.dotfiles/etc/gitignore
editor = /usr/bin/vim
attributesfile = ~/.dotfiles/etc/gitattributes
[color]
diff = auto
status = auto
branch = auto
ui = 1
compactionHeuristic = 1
[diff]
renames = copy
color = auto
mnemonicprefix = true
[diff "rspec"]
xfuncname = "^[ \t]*((RSpec|describe|context|it|before|after|around|feature|scenario)[ \t].*)$"
[diff "npy"]
textconv = "python -c 'import numpy as np; import sys; np.savetxt(sys.stdout, np.load(sys.argv[1]), fmt=\"%s\", delimiter=\"\t\")'"
[diff "zip"]
textconv = "unzip -lv"
[diff "targz"]
textconv = "tar --list --verbose --file"
[log]
date = local
graph = true
[apply]
whitespace = strip
[pager]
color = true
[status]
color = auto
[merge]
tool = vscode
[mergetool "vscode"]
cmd = code --wait $MERGED
[push]
default = upstream
[alias]
# stash all files, including untracked
stash-all = stash save --include-untracked
st = "status -sb"
ls = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
rb = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
[rebase]
stat = true
[branch]
autosetupmerge = true
autosetuprebase = local
sort = -committerdate
[pull]
ff = only
[init]
defaultBranch = main

[github]
user = tisba

[tig]
line-graphics = auto
tab-size = 4
[tig "bind"]
status = @ !git checkout %(file)
generic = + !git commit --amend
refs = "3" !git rebase -i master
diff = Up move-up
diff = Down move-down
status = P !git push origin
stash = D !?git stash drop %(stash)
stash = P !git stash pop %(stash)

[transfer]
fsckobjects = true
# To combat repository corruption!
# Note: this global option applies during receive and transmit
# https://git-scm.com/docs/git-config#Documentation/git-config.txt-fetchfsckObjects
